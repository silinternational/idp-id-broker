version: '2'
services:
    data:
        image: silintl/data-volume:latest
        volumes:
            - ./application:/data
            - ./auth.json:/root/.composer/auth.json
        user: "${DOCKER_UIDGID}"

    db:
        image: silintl/mariadb:latest
        ports:
            - "3306"
        env_file:
            - ./local.env

    app:
        build: ./
        volumes_from:
            - data
        ports:
            - "51140:80"
        mem_limit: 200m
        depends_on:
            - db
        env_file:
            - ./local.env
        environment:
#            RUN_TASK: cron/all
            EMAILER_CLASS: \Sil\SilIdBroker\Behat\Context\fakes\FakeEmailer
            EMAIL_SIGNATURE: "Dummy Signature for Development\r\rdo not reply to this email"

    appfortests:
        build: ./
        volumes_from:
            - data
        mem_limit: 200m
        ports:
            - "80"
        depends_on:
            - testdb
        environment:
            API_ACCESS_KEYS: api-test-NOTASECRET
            APP_ENV: test
            EMAIL_SERVICE_accessToken: dummy
            EMAIL_SERVICE_assertValidIp: "false"
            EMAIL_SERVICE_baseUrl: dummy
            EMAIL_SIGNATURE: Dummy Signature for Tests
            EMAILER_CLASS: \Sil\SilIdBroker\Behat\Context\fakes\FakeEmailer
            IDP_NAME: test
            MYSQL_ROOT_PASSWORD: r00tp@ss!
            MYSQL_HOST: testdb
            MYSQL_DATABASE: appfortests
            MYSQL_USER: appfortests
            MYSQL_PASSWORD: appfortests
            MFA_WEBAUTHN_apiBaseUrl: external_api:8080/
            MFA_WEBAUTHN_apiKey: EC7C2E16-5028-432F-8AF2-A79A64CF3BC1
            MFA_WEBAUTHN_apiSecret: 1ED18444-7238-410B-A536-D6C15A3C
            MFA_WEBAUTHN_appId: ourApp99
            MFA_WEBAUTHN_rpDisplayName: Our App
            MFA_WEBAUTHN_rpId: app99
            SUPPORT_EMAIL: support@example.com

    testdb:
        image: silintl/mariadb:latest
        ports:
            - "3306"
        environment:
            MYSQL_ROOT_PASSWORD: r00tp@ss!
            MYSQL_DATABASE: appfortests
            MYSQL_USER: appfortests
            MYSQL_PASSWORD: appfortests

    cli:
        image: silintl/php7:7.4
        volumes:
            - ${COMPOSER_CACHE_DIR}:/composer
        volumes_from:
            - data
        working_dir: /data
        environment:
            COMPOSER_CACHE_DIR: /composer
        env_file:
            - ./local.env
        command: ["true"]

    dynamo:
        image: amazon/dynamodb-local
        ports:
            - "8000:8000"
        environment:
            AWS_ACCESS_KEY_ID: abc123
            AWS_SECRET_ACCESS_KEY: abc123
            AWS_DEFAULT_REGION: us-east-1
        command: "-jar DynamoDBLocal.jar -sharedDb"

    external_api:
        build: ./serverless-mfa-api
        ports:
            - 8080
        volumes:
            - ./serverless-mfa-api/override:/src/override
        environment:
            AWS_ENDPOINT: dynamo:8000
            AWS_DEFAULT_REGION: us-east-1
            AWS_ACCESS_KEY_ID: abc123
            AWS_SECRET_ACCESS_KEY: abc123
            AWS_DISABLE_SSL: "true"
            API_KEY_TABLE: ApiKey
            WEBAUTHN_TABLE: WebAuthn
        depends_on:
            - dynamo
        working_dir: /src
        # Copy files from the override folder to be used for possible troubleshooting (e.g. with extra log statements)
        # (using bash -c to keep the chown command from ignoring the && and throwing an error)
        command: bash -c "chown -R 1000:1000 ./ && cp -R ./override/* ./ && go run ./server/"

    test:
        image: silintl/php7:7.4
        volumes_from:
            - data
        mem_limit: 200m
        working_dir: /data
        depends_on:
            - appfortests
            - external_api
        environment:
            TEST_SERVER_HOSTNAME: appfortests
            API_ACCESS_KEYS: api-test-NOTASECRET
            APP_ENV: test
            EMAILER_CLASS: \Sil\SilIdBroker\Behat\Context\fakes\FakeEmailer
            EMAIL_SERVICE_accessToken: dummy
            EMAIL_SERVICE_assertValidIp: "false"
            EMAIL_SERVICE_baseUrl: dummy
            EMAIL_SIGNATURE: Dummy Signature for Test
            MFA_WEBAUTHN_apiBaseUrl: external_api:8080
            MFA_WEBAUTHN_apiKey: abc123
            MFA_WEBAUTHN_apiSecret: abcd1234
            MFA_WEBAUTHN_appId: ourApp99
            MFA_WEBAUTHN_rpDisplayName: Our App
            MFA_WEBAUTHN_rpId: app99
            HELP_CENTER_URL: https://www.example.com/help
            IDP_DISPLAY_NAME: Test
            IDP_NAME: test
            MYSQL_DATABASE: appfortests
            MYSQL_HOST: testdb
            MYSQL_PASSWORD: appfortests
            MYSQL_USER: appfortests
            PASSWORD_PROFILE_URL: https://www.example.com
            SUPPORT_EMAIL: support@example.com
            HR_NOTIFICATIONS_EMAIL: hr@example.com
            ABANDONED_USER_bestPracticeUrl: http://www.example.com/best-practices.html
            ABANDONED_USER_deactivateInstructionsUrl: http://www.example.com/deactivate-instructions.html
        command: ./run-tests.sh
        # running isolated tests
        # docker-compose run --rm test vendor/bin/behat --stop-on-failure features/user.feature
        # docker-compose run --rm test vendor/bin/behat --stop-on-failure features/user.feature:306

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "51141:80"
        depends_on:
            - db
        env_file:
            - ./local.env
        environment:
            PMA_HOST: db
            PMA_USER: user
            PMA_PASSWORD: pass

    raml2html:
        image: mattjtodd/raml2html
        volumes:
            - ./api.raml:/api.raml
            - ./api.html:/api.html
        command: -i api.raml -o api.html

networks:
    default:
        driver: bridge
        ipam:
            driver: default
            config:
            - subnet: 10.20.39.0/24
              gateway: 10.20.39.1

